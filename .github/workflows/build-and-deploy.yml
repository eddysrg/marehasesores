name: Build and Deploy Frontend - Hostinger

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Create backup on server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        timeout: 30s
        script: |
          cd domains/marehasesores.com/public_html
          # Crear backup solo si existen archivos
          if [ "$(ls -A . 2>/dev/null | grep -v api)" ]; then
            mkdir -p ../backups
            tar -czf ../backups/frontend-backup-$(date +%Y%m%d-%H%M%S).tar.gz --exclude='api' .
            echo "‚úÖ Backup created"
          fi
          
    - name: Deploy frontend files
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        source: "dist/*"
        target: "domains/marehasesores.com/public_html/"
        strip_components: 1
        overwrite: true
        timeout: 120s
        
    - name: Setup server structure
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        timeout: 30s
        script: |
          cd domains/marehasesores.com/public_html
          
          # Verificar que api/ existe y preservarla
          if [ ! -d "api" ]; then
            mkdir -p api
            echo "üìÅ Created API directory"
          fi
          
          # Limpiar archivos temporales si existen
          rm -f deployment.tar.gz 2>/dev/null || true
          
          # Verificar estructura final
          echo "üìã Final structure:"
          ls -la
          
          # Intentar ajustar permisos b√°sicos (puede fallar en algunos hostings)
          find . -type f -name "*.html" -exec chmod 644 {} + 2>/dev/null || echo "‚ö†Ô∏è  Could not set file permissions"
          find . -type d -exec chmod 755 {} + 2>/dev/null || echo "‚ö†Ô∏è  Could not set directory permissions"
          
          echo "‚úÖ Frontend deployment completed"
          
    - name: Verify deployment
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        timeout: 15s
        script: |
          cd domains/marehasesores.com/public_html
          if [ -f "index.html" ]; then
            echo "‚úÖ Deployment verified - index.html exists"
            echo "üìä Files deployed: $(find . -maxdepth 1 -type f | wc -l)"
          else
            echo "‚ùå Deployment failed - index.html not found"
            exit 1
          fi